def lcs(s1,s2):
        answer=''
        m=len(s1)
        n=len(s2)

        for i in range(m):
                for j in range(n):
                        temp=0
                        match=''
                        while((i+temp < m) and (j+temp < n) and s1[i+temp]==s2[j+temp]):
                                match+=s1[i+temp]
                                temp+=1
                        if(len(match) > len(answer)):
                                answer=match
        return answer


print(lcs('abediahobe','obediah'))

def lcs_array(s1,s2):

        m=len(s1)
        n=len(s2)
        longest=0
        x_long=0
        counter=[[0 for  i in range(m+1)] for j in range(n+1)]
        for i in range(1,m+1):
                for j in range(1,n+1):
                        if(s1[i-1]==s2[j-1]):
                                counter[i][j]= counter[i-1][j-1]+1
                                if counter[i][j] > longest:
                                        longest=counter[i][j]
                                        x_long=i
        return(s1[x_long-longest:x_long])

print(lcs_array('abediah','obediah')) #bediah


##check performance of both the functions using timeit
###write a wrapper function to pass the lcs func to timeit

def wrapper(func,*args,**kwargs):
  def wrapped(*args,**kwargs):
      return(func(*args,**kwargs))
  return wrapped
def wrapped
wrapper1=wrapper(lcs,'obediah','abediah')
wrapper2=wrapper(lcs,'obediah','abediah')
print(timeit.timeit(wrapper1,number=1000)) #output=0.05102417402667925
print(timeit.timeit(wrapper1,number=1000)) #output=0.02962603297783062
